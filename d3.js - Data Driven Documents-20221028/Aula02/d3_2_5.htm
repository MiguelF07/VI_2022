<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Primeiro exemplo d3</title>

    <style type="text/css">
        div.bar {
            display: inline-block;
            width: 20px;
            height: 75px;
            margin-right: 2px;
            background-color: teal;
        }
    </style>

    <script type="text/javascript" src="http://d3js.org/d3.v4.js"></script>
    <!--script type="text/javascript" src="../d3/d3.min.js"></script-->

</head>


<body>
    <div class="div_d3"> </div>
    <!-- Posição 300,150 com raio 50 e cor vermelha -->
    <script type="text/javascript">
        var w = 500
        var h = 300
        var svg = d3.select("body")
                    .append("svg")
                    .attr("width", w)
                    .attr("height", h)
                    .attr("style", "background-color: teal");

        var dataset = [5, 10, 13, 19, 21, 25, 22, 18, 15, 13, 11, 12, 15, 20, 18, 17, 16, 18, 23, 25];
        var rects = svg.selectAll("rect")
                    .data(dataset)
                    .enter()
                    .append("rect")
                    .attr("x", 0)
                    .attr("y", 0)
                    .attr("width", 20)
                    .attr("height", 100);
        rects.attr("x", function (d, i) {
            return i * (w / dataset.length)
        });

        rects.attr("width", function (d, i) {
            return w / dataset.length - 1;
        });

        rects.attr("height", function (d, i) {
            return d * 4;
        });

        rects.attr("y", function (d, i) {
            return h-(d*4);
        });

        rects.attr("fill", function (d, i) {
            return "rgb(0, 0, " + (d * 10) + ")";
        });

        svg.selectAll("text")
              .data(dataset)
              .enter()
              .append("text")
              .text(function (d) {
                    return d;
            })
              .attr("x", function (d, i) {
                    return i * (w / dataset.length)+(1*(w / dataset.length) / 2);
              })
              .attr("y", function (d) {
                     return h - (d * 4) + 15;
              })
              .attr("text-anchor", "middle")
              .attr('style',"fill:white")
              ;
              var sortOrder = false;
            rects.on("click", function(d) {                    
                sortBars() 
            });

        //Define sort order flag
        
        //Define sort function
        var sortBars = function() {
            //Flip value of sortOrder
            sortOrder = !sortOrder;
            svg.selectAll("rect")
                    .sort(function(a, b) {
                            if (sortOrder) {
                                    return d3.ascending(a, b);
                            } else {
                                    return d3.descending(a, b);
                            } })
                    .transition()
                    .duration(1000)
                    .delay(function(d, i) {
                            return i * 50;
                    })
                    .ease(d3.easeCubicInOut)
                    .attr("x", function(d, i) {
                    return i * (w / dataset.length);
                    })
            svg.selectAll("text")
            .sort(function(a, b) {
                    if (sortOrder) {
                            return d3.ascending(a, b);
                    } else {
                            return d3.descending(a, b);
                    } })
            .transition()
            .duration(1000)
            .delay(function(d, i) {
                    return i * 50;
            })
            .ease(d3.easeCubicInOut)
            .attr("x", function(d, i) {
                    return i * (w / dataset.length)+(1*(w / dataset.length) / 2);
            })
        };
    </script>
</body>

</html>